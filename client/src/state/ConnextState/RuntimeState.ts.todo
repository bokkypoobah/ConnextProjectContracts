import Wallet from 'ethereumjs-wallet'
import {ExchangeRates} from './ExchangeRates'
import {CurrencyType} from './CurrencyTypes'
import {FeatureFlags} from './FeatureFlags'
import {AuthorizationRequestState} from './AuthorizationRequestState'
import {BrandingState} from './BrandingState'
import {PurchasePaymentRow} from './HistoryItem'
import {MigrationState} from './MigrationState'
import * as semaphore from 'semaphore'
import {Payment, SyncResult} from '../../lib/connext-client/types'

export interface RuntimeState {
  sem: semaphore.Semaphore
  wallet?: Wallet
  isTransactionPending: number
  lastUpdateDb: number
  currentHubUrl: string
  currentAuthRealm: string
  currentAuthToken: string
  authorizationRequest: AuthorizationRequestState | null
  isFrameDisplayed: boolean
  isPerformer?: boolean
  isPendingVerification: boolean
  needsCollateral: boolean
  forceRedirect?: string
  branding: BrandingState
  history: PurchasePaymentRow[]
  addressBalances: Payment
  hasActiveWithdrawal: boolean
  hasActiveDeposit: boolean
  hasActiveExchange: boolean
  activeWithdrawalError: string | null
  exchangeRates: ExchangeRates | null
  username: string | null
  baseCurrency: CurrencyType
  renderedCurrency: CurrencyType
  featureFlags: FeatureFlags
  moreEthNeeded: boolean
  migrationState: MigrationState
  currentMigration?: any
  syncQueue: SyncResult[]
}
