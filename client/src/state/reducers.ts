import {ConnextState} from './store'
import {reducerWithInitialState, ReducerBuilder} from 'typescript-fsa-reducers/dist'
import * as actions from './actions'

export const reducers: ReducerBuilder<ConnextState, ConnextState> = reducerWithInitialState(new ConnextState())
  //.case(actions.setWallet, actions.setWalletHandler)
  //.case(actions.setKeyring, actions.setKeyringHandler)
  //.case(actions.setDidStoreMnemonic, actions.setDidStoreMnemonicHandler)
  //.case(actions.rememberPage, actions.rememberPageHandler)
  //.case(actions.setLastUpdateDb, actions.setLastUpdateDbHandler)
  //.case(actions.setHubBranding, actions.setHubBrandingHandler)
  //.case(actions.setCurrentHubUrl, actions.setCurrentHubUrlHandler)
  //.case(actions.setCurrentAuthRealm, actions.setCurrentAuthRealmHandler)
  //.case(actions.toggleFrame, actions.toggleFrameHandler)
  //.case(actions.setChannel, actions.setChannelHandler)
  //.case(actions.setCurrentAuthToken, actions.setCurrentAuthTokenHandler)
  //.case(actions.setHistory, actions.setHistoryHandler)
  //.case(actions.reset, actions.resetHandler)
  //.case(actions.setHasActiveWithdrawal, actions.setHasActiveWithdrawalHandler)
  //.case(actions.setActiveWithdrawalError, actions.setActiveWithdrawalErrorHandler)
  .case(actions.setExchangeRates, actions.setExchangeRates.handler)
  //.case(actions.setUsername, actions.setUsernameHandler)
  //.case(actions.setIsPendingVerification, actions.setIsPendingVerificationHandler)
  //.case(actions.setHasActiveDeposit, actions.setHasActiveDepositHandler)
  //.case(actions.setInitialState, actions.setInitialStateHandler)
  //.case(actions.setFeatureFlags, actions.setFeatureFlagsHandler)
  //.case(actions.setBaseCurrency, actions.setBaseCurrencyHandler)
  //.case(actions.setaddressBalances, actions.setaddressBalancesHandler)
  //.case(actions.setMoreEthNeeded, actions.setMoreEthNeededHandler)
  //.case(actions.setMigrationState, actions.setMigrationStatehandler)
  //.case(actions.setNeedsCollateral, actions.setNeedsCollateralHandler)
  //.case(actions.setUpdateTimeout, actions.setUpdateTimeoutHandler)
  //.case(actions.setThreads, actions.setThreadsHandler)
  //.case(actions.enqueueSyncItems, actions.enqueueSyncItemsHandler)
  //.case(actions.dequeueSyncItem, actions.dequeueSyncItemHandler)
  //.case(actions.setTransactionState, actions.setTransactionStateHandler)
  //.case(actions.removeTransactionState, actions.removeTransactionStateHandler)
  //.case(actions.setLastThreadId, actions.setLastThreadIdHandler)
  //.case(actions.setHasActiveExchange, actions.setHasActiveExchangeHandler)
